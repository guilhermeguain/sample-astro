---
import { marked } from "marked";
import dayjs from "dayjs";

import { fetchGraphQL } from "../../lib/strapi";

import type { GetPostsGraphQlProps, PostProps } from "../../lib/strapi/types";

import Layout from "../../layouts/Layout.astro";
import { getPostsQuery } from "../../queries/getPostsQuery";

export async function getStaticPaths() {
  const postsData = await fetchGraphQL<GetPostsGraphQlProps>({
    query: getPostsQuery,
    wrappedByKey: "data",
  });
  const posts = postsData?.posts.data ?? [];

  return (
    posts?.map((post) => ({
      params: { slug: post.attributes.slug },
      props: post,
    })) ?? []
  );
}
type Props = PostProps;

const post = Astro.props;
const postImage = post.attributes.featuredImage;
const postImageAttributes = postImage?.data?.attributes;

const content = post.attributes.content;
---

<Layout
  title={post.attributes.title}
  description={post.attributes.metaDescription}
>
  <main>
    <div class="max-w-7xl m-auto">
      <div
        class="mb-20 p-6 bg-gray-800 rounded-lg text-gray-50 text-xl border border-gray-700"
      >
        <img
          class="m-auto mb-8"
          src={`${import.meta.env.STRAPI_URL}${postImageAttributes.url}`}
          alt={postImageAttributes.alternativeText}
          width={postImageAttributes.width}
          height={postImageAttributes.height}
        />

        <h1 class="text-4xl mb-4 text-center">{post.attributes.title}</h1>

        <div
          class="flex mb-4 border-y py-2 text-sm text-center justify-center gap-8"
        >
          <span
            >Publicado em: {
              dayjs(post.attributes.publishedAt).format("MM:HH DD/MM/YYYY")
            }</span
          >
          <span
            >Atualizado em: {
              dayjs(post.attributes.updatedAt).format("MM:HH DD/MM/YYYY")
            }</span
          >
        </div>

        <div class="rich-text" set:html={marked(content)} />
      </div>
    </div>
  </main>
</Layout>

<style lang="scss" is:global>
  .rich-text {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    font-size: 1.15rem;
    line-height: 1.5;

    p {
      text-align: justify;
    }

    a {
      text-decoration: underline;

      &:hover {
        text-decoration: none;
      }
    }

    ul {
      list-style: none;

      li {
        display: flex;
        align-items: center;

        &:before {
          margin-right: 0.5rem;

          content: "â€¢";
        }
      }
    }

    ol {
      list-style: none;

      li {
        display: flex;
        align-items: center;

        counter-increment: ordered-list;

        &:before {
          margin-right: 0.5rem;

          content: counter(ordered-list) ".";
        }
      }
    }
  }
</style>
